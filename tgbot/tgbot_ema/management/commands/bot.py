from django.contrib.auth.models import User
from typing import Optional, Any
from django.core.management.base import BaseCommand
from telebot import TeleBot
from .keyboard import keyboard as kb
import os
from dotenv import load_dotenv, find_dotenv

from tgbot_ema.models import Profile, Product, Category

load_dotenv(find_dotenv())

bot = TeleBot(os.getenv('TOKEN'), threaded=False)



class Command(BaseCommand):
    help = "implemented to Django telegram"

    def handle(self, *args: Any, **options: Any) -> Optional[str]:
        bot.enable_save_next_step_handlers(delay=2)
        #bot.load_next_step_handlers()
        bot.infinity_polling()


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

@bot.message_handler(commands=['start'])
def welcome(message):
    user_data = message.from_user

    try:
        Profile.objects.get(telegram_user_id=user_data.id)
    except Profile.DoesNotExist:
        user = User.objects.create(
            username=user_data.username or user_data.id,
            first_name=user_data.first_name,
            last_name=user_data.last_name)
        Profile.objects.create(user_id=user.id,
                               telegram_user_id=user_data.id)
    bot.send_message(message.chat.id, f'<i>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ë–û–¢, {user_data.first_name} üëã \n\n'
                                      '–ú–´ –º–∞–≥–∞–∑–∏–Ω –º–µ–º–æ—Ä–∏–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã EMA.by\n\n'
                                      '–ü–æ–º–æ–∂–µ–º –í–ê–ú –∑–∞–∫–∞–∑–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–æ–≤–∞—Ä—ã ‚úÖ\n\n'
                                      '–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É</i> /register', parse_mode='html')


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /register
@bot.message_handler(commands=['register'])
def register(message):
    bot.send_message(message.chat.id, '<i>–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–æ–≤–∞—Ä –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –ö–∞—Ç–∞–ª–æ–≥üìî\n\n'
                                      '–¢–∞–∫ –∂–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞–º–∏ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µüíª</i>',
                     parse_mode='html',
                     reply_markup=kb.menu)


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /order –∏ –∑–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞
@bot.message_handler(commands=['order'])
def order(message):
    msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏, –≤ —Ñ–æ—Ä–º–∞—Ç–µ:</b>\n'
                                            '29xxxxxxx, 33xxxxxxx, 44xxxxxxx, 25xxxxxxx', parse_mode='html')
    bot.register_next_step_handler(msg, save_order)


def save_order(message):
    user_data = message.from_user
    user_phone = message.text
    telegram_ids = Profile.objects\
        .filter(user__is_staff=True) \
        .exclude(telegram_user_id=message.from_user.id) \
        .values_list('telegram_user_id', flat=True)
    for admin in telegram_ids:
        bot.send_message(admin, f'<b>{user_data.first_name} {user_data.last_name}</b>\n'
                                f'telegram-id {user_data.id} \n'
                                f'<i>–û—Å—É—â–µ—Å—Ç–≤–∏–ª(–∞) –∑–∞–∫–∞–∑</i>\n'
                                f'<i>–ñ–¥—ë—Ç —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</i>', parse_mode='html')
    bot.send_message(message.chat.id, f'<i>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞</i>, {user_data.first_name}‚úÖ\n'
                                      f'<i>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞</i>‚òéÔ∏è',
                    parse_mode='html')

    doc = open('client.txt', 'a+', encoding='utf-8')
    doc.write(f"–ò–º—è - {user_data.first_name}\n –¢–µ–ª–µ—Ñ–æ–Ω - {user_phone}\n")
    doc.close()





# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–º
@bot.message_handler(content_types=['text'])
def text(message):
    if message.text == '–ö–∞—Ç–∞–ª–æ–≥üìî':
        bot.send_message(message.chat.id, '<u>‚¨áÔ∏è–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é‚¨áÔ∏è</u>',
                         parse_mode='html', reply_markup=kb.catalog_menu)
    elif message.text == '–ù–∞—à —Å–∞–π—Çüåê':
        bot.send_message(message.chat.id, 'https://ema.by/')
    elif message.text == '–õ–∞–º–ø–∞–¥—ã1Ô∏è‚É£':
        category_lamps = Category.objects.get(name='–õ–∞–º–ø–∞–¥—ã')
        show_lamps = category_lamps.products.all()
        for obj in show_lamps:
            msg_lamps = f'<i>–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –õ–∞–º–ø–∞–¥—ã‚úÖ</i>\n{obj.name}\n{obj.description}\n{obj.price} —Ä—É–±.'
            if obj.id == 3:
                bot.send_photo(message.chat.id, photo=open('media/–õ–∞–º–ø–∞–¥–∞2.jpg', 'rb'),
                               caption=msg_lamps, parse_mode='html', reply_markup=kb.menu_order)
            elif obj.id == 4:
                bot.send_photo(message.chat.id, photo=open('media/–õ–∞–º–ø–∞–¥–∞1.jpg', 'rb'),
                               caption=msg_lamps, parse_mode='html', reply_markup=kb.menu_order)
    elif message.text == '–í–∞–∑—ã2Ô∏è‚É£':
        category_vases = Category.objects.get(name='–í–∞–∑—ã')
        show_vases = category_vases.products.all()
        for obj in show_vases:
            msg_vases = f'<i>–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –í–∞–∑—ã‚úÖ</i>\n{obj.name}\n{obj.description}\n{obj.price} —Ä—É–±.'
            if obj.id == 1:
                bot.send_photo(message.chat.id, photo=open('media/–í–∞–∑–∞1.jpg', 'rb'),
                               caption=msg_vases, parse_mode='html', reply_markup=kb.menu_order)
            elif obj.id == 2:
                bot.send_photo(message.chat.id, photo=open('media/–í–∞–∑–∞2.jpg', 'rb'),
                               caption=msg_vases, parse_mode='html', reply_markup=kb.menu_order)
            elif obj.id == 5:
                bot.send_photo(message.chat.id, photo=open('media/–í–∞–∑–∞3.jpg', 'rb'),
                               caption=msg_vases, parse_mode='html', reply_markup=kb.menu_order)
    elif message.text == '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑/–ö—É–ø–∏—Ç—åüõí':
        bot.send_message(message.chat.id, '<b>–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É‚¨áÔ∏èüìå</b>\n'
                                          '/order\n'
                                          '–î–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –∫–∞—Ç–∞–ª–æ–≥ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>üîô–ù–∞–∑–∞–¥</b>',
                         parse_mode='html',
                         reply_markup=kb.menu_reg)
    elif message.text == 'üîô–ù–∞–∑–∞–¥':
        bot.send_message(message.chat.id, '<b>–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∫–∞—Ç–∞–ª–æ–≥</b>',
                         parse_mode='html',
                         reply_markup=kb.catalog_menu)
    else:
        bot.reply_to(message.chat.id, '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—éüòî\n'
                                          '–í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è')
